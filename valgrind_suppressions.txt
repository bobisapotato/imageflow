
{
   Rust reads terminal information from disk; Valgrind sees this as uninitialized memory
   Memcheck:Cond
   ...
   fun:*TerminfoTerminal*
   ...
}
{
   Rust reads terminal information from disk; Valgrind sees this as uninitialized memory
   Memcheck:Cond
   ...
   fun:*TermInfo*
   ...
}

{
   Don't show uninit issues inside cargo
   Memcheck:Cond
   ...
   obj: */rustc
   ...
}

{
   Don't show uninit issues inside cargo
   Memcheck:Cond
   ...
   obj: */cargo
   ...
}
{
   Rustup also reads things valgrind thinks are uninitialized. Rustup used in many binaries.
   Memcheck:Cond
   ...
   fun:*rustup_init*
   ...
}
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   ...
   fun:*cargo_compile*
   ...
}
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   ...
   fun:*cargo_rustc*
   ...
}
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   ...
   fun:*cargo?main*
   ...
}
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   ...
   fun:*cargo?process*
   ...
}
{
   Rustdoc compiles tests; we can't block the process, though, since it's parent to the actual code.
   Memcheck:Cond
   ...
   fun:*rustc_driver*
   ...
}
{
   Rustdoc compiles tests; we can't block the process, though, since it's parent to the actual code.
   Memcheck:Cond
   ...
   fun:*rustc_trans*
   ...
}

{
   Rust test harness
   Memcheck:Leak
   match-leak-kinds: possible
   fun:calloc
   fun:allocate_dtv
   fun:_dl_allocate_tls
   fun:allocate_stack
   ...
}

{
   Rust test harness
   Memcheck:Leak
   ...
   fun:allocate_stack
   ...
}
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:_ZN5regex4exec11ExecBuilder5build17hd0deb98f11b8ee35E
   ...
}
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   ...
   fun:_ZN5cargo3ops7resolve21resolve_with_previous17h35c94e6aca658849E
}



{
   Our test runner isn't the most careful
   Memcheck:Cond
   fun:_ZNK5Catch12TestRegistry17getAllTestsSortedERKNS_7IConfigE
   fun:_ZN5Catch8runTestsERKNS_3PtrINS_6ConfigEEE
   fun:main
}
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:*getAllTestCasesSorted*
   ...
}

{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: definite
   ...
   fun:*Catch*CompositeGenerator*
   ...
}
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: definite
   ...
   fun:*Catch*getGeneratorIndex*
   ...
}
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   ...
   fun:*getAllTestCasesSorted*
   ...
}


{
   Reported to https://github.com/glennrp/libpng/issues/97
   Memcheck:Cond
   fun:fill_window
   fun:deflate_fast
   fun:deflate
   ...
}

{
   See http://zlib.net/zlib_faq.html#faq36
   Memcheck:Cond
   fun:slide_hash
   fun:fill_window
   fun:deflate_fast
   fun:deflate
   fun:png_compress_IDAT
   ...
}
